#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <locale.h>
#include <stdlib.h>
#include <conio.h>
#include <math.h>
#define N 10
#define M_PI 3.14159265358979323846
int main()
{
    setlocale(LC_CTYPE, "RUS");
    double temp, ari = 0;
    float A[N];
    for (int i = 0; i < N; i++)
    {
        printf("a[%d] = ", i);
        scanf("%lf", &temp);
        A[i] = temp;
    }
    for (int i = 0;i < N;i++)
    {
        ari += A[i];
    }
    printf("_______________________________________________\n");
    printf("| индекс | исходное значение | новое значение |\n");
    printf("|--------|-------------------|----------------|\n");
    for (int i = 0; i < N; i++)
    {
        printf("|%8d|", i);
        printf("%19.lf|", A[i]);
        A[i] = ceil(A[i]);
        printf("%16.lf|\n", A[i]);
    }
    printf("-----------------------------------------------\n");
    printf("Среднее арифметическое элементов массива: %lf\n\n", ari / N);
    
	float x, ily[100];
	double step, nogr = 0.1, kogr = 2.5;
	double coppol = 0.0, copotr = 0.0;
	int colpol = 0, colotr = 0;
	int shit=0;
	printf("\nВведите шаг табуляции:");
	scanf("%lf", &step);
	for (double x = nogr;x <= kogr;x += step)
	{
		ily[shit] = pow(x, 2) + 2 * M_PI * cos(M_PI * x);
		shit++;
	}
	for (int i = 0; i < 100; i++)	
	{
		if (ily[i] > 0)
		{
			coppol += ily[i];
			colpol++;
		}
		else if (ily[i] < 0)
		{
			copotr += ily[i];
			colotr++;
		}
	}
	printf("\nИмя массива: ily\n");
	printf("\nНакопленное значение положительных элементов: %lf", coppol);
	printf("\nНакопленное значение отрицательных элементов: %lf\n", copotr);

	printf("\nКоличество положмтельных элементов: %d", colpol);
	printf("\nКоличество отрицательных элементов: %d\n\n", colotr);

	

	int ihy[N];
	for (int i = 0; i < N; i++)
	{
		printf("a[%d] = ", i);
		scanf("%d", &ihy[i]);
	}
	int lastindex;
	for (int i = 0; i < N; i++)
	{
		if (ihy[i] < 0 && ihy[i] % 3 == 0)
		{
			lastindex = i;
		}
	}
	printf("Идекс последнего отрицательного элемента, делящегося на 3: %d\n", lastindex);
}
