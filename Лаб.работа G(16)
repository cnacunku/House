#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <locale.h>
#include <stdlib.h>
#include <conio.h>
#include <math.h>
#include <time.h>

double* full_elements(double* ptr_array, int n)
{
	srand((unsigned)time(NULL));
	for (int i = 0; i < n; i++)
		ptr_array[i] = -50 + rand() % 101 + rand() / (double)RAND_MAX;
	return ptr_array;
}

double* calc_elements(double* ptr_array, int n)
{
	for (int i = 0; i < n; i++)
	{
		ptr_array[i] = ceil(ptr_array[i]);
	}
	return ptr_array;
}

void put_elements(double* ptr_array, int size)
{
	for (int i = 0; i < size; i++)
		printf("\n a[%d]= %.1f", i, ptr_array[i]);
	return 0;
}

void put_elements_k(double* ptr_array, int k)
{
	for (int i = 0; i < k; i++)
		printf("\n a[%d]= %.1f", i, ptr_array[k]);
	return 0;
}


double* vtoroe_zadanie(double* ptr_array, int size)
{
	srand((unsigned)time(NULL));
	for (int i = 0; i < size; i++)
		ptr_array[i] = -1 + rand() % 2 + rand() / (double)RAND_MAX;
	return ptr_array;
}

void udal_otric(double* ptr_array, int size)
{
	int k = 0;
	for (int i = 0; i < size; i++)
	{
		if (ptr_array[i] >= 0)
			ptr_array[k++] = ptr_array[i];
	}
	size=k;
}

int main()
{
	setlocale(LC_CTYPE, "RUS");
	double* ptr_array;

	int size;
	printf("Размер массива > ");
	scanf("%d",&size);

	ptr_array = (double*)malloc(size * sizeof(double));

	if (ptr_array == NULL) {

		puts("error");

		return -1;
	}
	full_elements(ptr_array, size);

	put_elements(ptr_array, size); printf("\n");
	printf("Начальный массив\n");

	calc_elements(ptr_array, size);

	put_elements(ptr_array, size); printf("\n");
	printf("Обработанный массив\n");

	free(ptr_array);

	vtoroe_zadanie(ptr_array, size);

	put_elements(ptr_array, size); printf("\n");
	
	udal_otric(ptr_array, size);

	put_elements_k(ptr_array, k); printf("\n");
}
